1. NLP (stemming, tokenization, bag of words)
2. create training data
3. PyTorch model and training
4. Save/load model and implement the chat

test độ chính xác


from sklearn.model_selection import train_test_split  # type: ignore
from sklearn.metrics import accuracy_score  # type: ignore

    # Tách dữ liệu thành train và test (80% train, 20% test)
train_xy, test_xy = train_test_split(xy, test_size=0.2, random_state=42)

# Tạo tập dữ liệu huấn luyện
X_train = []
Y_train = []
for pattern_sentence, tag in train_xy:
    bag = bag_of_words(pattern_sentence, all_intents)
    X_train.append(bag)
    label = tags.index(tag)
    Y_train.append(label)

X_train = np.array(X_train, dtype=np.float32)
Y_train = np.array(Y_train)

# Tạo tập dữ liệu kiểm tra
X_test = []
Y_test = []
for pattern_sentence, tag in test_xy:
    bag = bag_of_words(pattern_sentence, all_intents)
    X_test.append(bag)
    label = tags.index(tag)
    Y_test.append(label)

X_test = np.array(X_test, dtype=np.float32)
Y_test = np.array(Y_test)

model.eval()
with torch.no_grad():
    X_test_tensor = torch.tensor(X_test, dtype=torch.float32).to(device)
    Y_test_tensor = torch.tensor(Y_test, dtype=torch.long).to(device)

    outputs = model(X_test_tensor)
    _, predicted = torch.max(outputs, 1)

    accuracy = accuracy_score(Y_test, predicted.cpu().numpy())
    print(f"Accuracy on test set: {accuracy * 100:.2f}%")
